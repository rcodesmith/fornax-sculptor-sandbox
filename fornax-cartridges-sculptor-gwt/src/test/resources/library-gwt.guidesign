import "classpath:/library-person-gwt.btdesign"
import "classpath:/library-gwt.btdesign"

gui LibraryWeb for Library {

	
	Module for person {
		> @PersonService
		
		View Menu {
			contents {
				link personLink  {
					label = "Person Form"
					
					onClick=goToPersonForm
				}
				link mediaBrowseLink {
					label = "Media Browse"
					
					onClick=goToMediaBrowse
				}
			}
			
			UiBehavior NavigateToView goToPersonForm {
				view = PersonForm
			}

			UiBehavior NavigateToView goToMediaBrowse {
				view = MediaBrowse
			}
			
		}
		
		View PersonForm for Person {
			> @PersonService
	
			parameters {
				Long personId not nullable;
				String displayMode nullable;
			}
			
			contents {
				inputText nameField {
					label = "Name"
				}

				listBox genderSelector forEnum Gender {
					label = "Gender"
				}

				listBox typeSelector {
					label = "Type"
				}
				
//				custom customWidget {
//					label = "Custom Widget"
//				}
				
				button saveButton {
					label = "Save"
				}
				
				informationalText info1 forProperty ssn.number {
					label = "Info Numero Uno"
				}
				
				//textArea textArea1 {
				//	label = "Text area uno"
				//}
				
//				autocomplete autocomp1 forProperty ssn {
//					label = "Auto complete one"
//				}
			}
		}
		
		View TableView {
			hint="gwtpresentercallbacks"
			
			parameters {
				String param1;
			}

			contents {
				inputText nameField {
					label = "Name"
				}

				informationalText info1 {
					label = "Info Numero Uno"
				}

				autocomplete nameSelector for Person {
					label = "Person Name"
					onSelectItem = confirmSomeMessage
				}
				
				link goToPersonSearchLink {
					label = "Go to person search"
					onClick = someLinkBehavior
				}

				table mytable for Person {
					label="My Table"
					
					columns {
						name type=Text; //forOp getDisplayName
						
						birthDate type=Date; //forProperty birthDate
						
						widget listBox genderSelector forProperty sex forEnum Gender {
							label = "Gender"
							onSelectItem=populatePersonDetailsPanel,updatePerson
						}
						
						edit type=Button onClick=populatePersonDetailsPanel;
						
						widget link personLink {
							label = "Edit Person"
							onClick = someLinkBehavior
							
						}
					}
				}
				
				table personTable for Person {
					label="Person Table"
					
					columns {
						name label="Name" type=Text forOp getDisplayName filterable sortable;
						
						birthDate label = "Birthdate" type=Date; // forProperty birthDate

						nickname label="Nickname" type=Custom;
						
						profileLink label="View Profile" type=Link;
						
						edit label="Edit" type=Button onClick=populatePersonDetailsPanel;
						
						
					}
				}

				panel personDetailsPanel for Person {
					contents {
						inputText nestedNameField {
							label = "Name"
						}
						inputText addressField {
							label = "Address"
						}
					}
				}
				
				panel errorPanel {
					widgetType = "SimplePanel"
				}
				
				button saveButton {
					label = "Save"
					onClick = someLinkBehavior
				}
				
				
			}
			
			"Populate the person details panel"
			UiBehavior PopulatePanel populatePersonDetailsPanel {
				panel=personDetailsPanel
			}
			UiBehavior Custom someLinkBehavior {
				
			}
			
			UiBehavior UpdateAttribute updatePerson {
				
			}

			"Confirm the user wants to do something"
			UiBehavior DisplayMessage confirmSomeMessage {
				cancelable
				message="Are you really sure you want to do this!?!?"
			}

			"Behavior to popup a panel"
			UiBehavior PopupPanel popupPersonDetails {
				panelName = "Person details"
				view = PersonPopup
			}
			
			Condition Custom isEditor {
				
			}
			
			Condition HasDirtyValue isDirty {
				dirty
			}

			
		}
		
		
		View PersonPopup {
			parameters {
				Long personId;
			}
			contents {
				informationalText personId {
					label = "Person ID"
				}
			}
		}


		"This is some MyEvent1 documentation"
		Event MyEvent1 {
			String attr1;
			
			"This is some documentation"
			Integer attr2;
			
			Date date1;
			
			DateTime dateTime1;
		}
		
		"Populate the person details panel"
		UiBehavior PopulatePanel populatePersonDetailsPanel {
			panel=personDetailsPanel
		}

	}
	
	Module for media {
		basePackage = org.fornax.cartridges.sculptor.examples.library.mediaalt
		
		> @MediaService
		
		View MediaBrowse {
			
		}
	}
	
	
}