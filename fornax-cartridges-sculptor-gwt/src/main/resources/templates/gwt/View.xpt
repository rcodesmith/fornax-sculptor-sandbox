«IMPORT sculptormetamodel»
«IMPORT sculptorguimetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::properties»
«EXTENSION extensions::guihelper»
«EXTENSION extensions::gwt::gwtuihelpers»


«DEFINE view(Module module) FOR GuiModule»

	«EXPAND viewInterface FOREACH this.views»	
	«EXPAND viewBase FOREACH this.views»
	«EXPAND viewImpl FOREACH this.views»

	«EXPAND templates::gwt::Activity::activityBase FOREACH this.views»
	«EXPAND templates::gwt::Activity::activityImpl FOREACH this.views»
	
	«EXPAND templates::gwt::ViewTemplate::viewCompositeBaseTemplate FOREACH this.views»
	«EXPAND templates::gwt::Place::placeBase FOREACH this.views»
	
	
«ENDDEFINE»


«DEFINE viewInterface FOR View»


«FILE javaFileName(fqnGwtViewInterface())»
package «gwtWidgetsPackage()»;
	public interface «gwtViewInterface()» extends com.google.gwt.user.client.ui.IsWidget {
		public void initView();
		
		«EXPAND widgetInterfaceDeclarations FOREACH widgets»
		
	}

«ENDFILE»
«ENDDEFINE»

«REM»Declarations that must be added to the view interface for ecah widget«ENDREM»
«DEFINE widgetInterfaceDeclarations FOR Widget»
«ENDDEFINE»

«DEFINE widgetInterfaceDeclarations FOR TableWidget»
	public com.google.gwt.view.client.HasData<«fqnTableForClass()»> get«name.toFirstUpper()»HasData();
«ENDDEFINE»

«DEFINE widgetInterfaceDeclarations FOR ButtonWidget»
	public com.google.gwt.event.dom.client.HasClickHandlers get«name.toFirstUpper()»HasClickHandlers();
«ENDDEFINE»

«DEFINE widgetInterfaceDeclarations FOR InputTextWidget»
	public com.google.gwt.user.client.ui.HasText get«name.toFirstUpper()»HasText();
«ENDDEFINE»

«DEFINE widgetInterfaceDeclarations FOR InputDateWidget»
	public com.google.gwt.user.client.ui.HasText get«name.toFirstUpper()»HasText();
«ENDDEFINE»

«DEFINE widgetInterfaceDeclarations FOR LinkWidget»
	public com.google.gwt.event.dom.client.HasClickHandlers «widgetClickHandlersExpr()»;
«ENDDEFINE»



«REM»View base class«ENDREM»
«DEFINE viewBase FOR View»
«FILE javaFileName(fqnGwtViewWidgetBaseClass())»

package «gwtWidgetsPackage()»;

public abstract class «gwtViewWidgetBaseClass()» extends com.google.gwt.user.client.ui.Composite
	implements «fqnGwtViewInterface()» {

	«loggerDeclaration(gwtViewWidgetBaseClass())»

    interface «gwtViewWidgetBaseUiBinderClass()» extends com.google.gwt.uibinder.client.UiBinder<com.google.gwt.user.client.ui.Widget, «fqnGwtViewWidgetBaseClass()»> {}

    private static «gwtViewWidgetBaseClass()»UiBinder uiBinder = com.google.gwt.core.client.GWT
    	.create(«gwtViewWidgetBaseClass()»UiBinder.class);

	public «gwtViewWidgetBaseClass()»() {
		initWidget(getWidget());
		
		«EXPAND widgetInitCalls FOREACH widgets»
	}
	
    protected com.google.gwt.user.client.ui.Widget getWidget() {
    	return uiBinder.createAndBindUi(this);
    }
    
    public void initView() {
    
    }
    
    «EXPAND widgetDeclaration FOREACH widgets»
    
    «EXPAND widgetMethods FOREACH widgets»
}

«ENDFILE»

«ENDDEFINE»

«REM»Calls to widget initialization functions on construction«ENDREM»
«DEFINE widgetInitCalls FOR Widget»
«ENDDEFINE»

«DEFINE widgetInitCalls FOR TableWidget»

	// Initialize «name» table (columns, etc)
	init«name.toFirstUpper()»Table();
«ENDDEFINE»


«REM»Widget misc. methods«ENDREM»

«DEFINE widgetMethods FOR TableWidget»
    public void replace«name.toFirstUpper()»Data(java.util.Collection<«fqnTableForClass()»> newData) {
        java.util.List<«fqnTableForClass()»> newDataList = new java.util.ArrayList<«fqnTableForClass()»>(newData);
        replace«name.toFirstUpper()»Data(newDataList);
    }

    public void replace«name.toFirstUpper()»Data(java.util.List<«fqnTableForClass()»> newDataList) {
        «name».setRowCount(newDataList.size());
        «name».setRowData(newDataList);
    }

    public void clear«name.toFirstUpper()»Data() {
        replace«name.toFirstUpper()»Data(new java.util.ArrayList<«fqnTableForClass()»>());
    }

	/**
	  * Initialize table columns
	  * to be overridden by implementation class.
	  */
    protected void init«name.toFirstUpper()»Table() {
    «FOREACH columns AS col»
    «name».addColumn(init«name.toFirstUpper()»Table«col.name.toFirstUpper()»Column());
    «ENDFOREACH»
    }
    
    «FOREACH columns AS col»
	    «IF col.columnType == "Text"»
		    «EXPAND tableColumnInitText(this) FOR col »
		«ELSEIF col.columnType == "Button"»
		    «EXPAND tableColumnInitButton(this) FOR col »
	    «ENDIF»
	    
    «ENDFOREACH»
    

	public com.google.gwt.view.client.HasData<«fqnTableForClass()»> get«name.toFirstUpper()»HasData() {
		return «name»;
	}
	
	

«ENDDEFINE»


«DEFINE tableColumnInitText(TableWidget tableWidget) FOR TableColumn»
	protected com.google.gwt.user.cellview.client.Column<«tableWidget.for.fqnGwtDto()», String> init«tableWidget.name.toFirstUpper()»Table«this.name.toFirstUpper()»Column() {
		return new com.google.gwt.user.cellview.client.TextColumn<«tableWidget.for.fqnGwtDto()»>() {
                        @Override
                        public String getValue(«tableWidget.for.fqnGwtDto()» object) {
                        	return get«tableWidget.name.toFirstUpper()»Table«this.name.toFirstUpper()»ColValue(object);
                        }
        };
	}
	    
	protected «this.hasSourceRef() ? "" : "abstract "»String get«tableWidget.name.toFirstUpper()»Table«this.name.toFirstUpper()»ColValue(«tableWidget.for.fqnGwtDto()» object)
	
		«IF this.hasSourceRef()»
		{
	    	return «this.getSourceRefExpression("object")»;
	    }
	    «ELSE»
	    ;
		«ENDIF»
«ENDDEFINE»

«DEFINE tableColumnInitButton(TableWidget tableWidget) FOR TableColumn»
	protected com.google.gwt.user.cellview.client.Column<«tableWidget.for.fqnGwtDto()», String> init«tableWidget.name.toFirstUpper()»Table«this.name.toFirstUpper()»Column() {

		com.google.gwt.cell.client.ButtonCell cellB = new com.google.gwt.cell.client.ButtonCell();
		
		com.google.gwt.user.cellview.client.Column<«tableWidget.for.fqnGwtDto()», String> col = new Column<«tableWidget.for.fqnGwtDto()», String>(cellB) {

			@Override
			public String getValue(«tableWidget.for.fqnGwtDto()» object) {
				return "«this.label»";
			}

		};
		col.setFieldUpdater(new com.google.gwt.cell.client.FieldUpdater<«tableWidget.for.fqnGwtDto()», String>() {

			@Override
			public void update(int index, «tableWidget.for.fqnGwtDto()» object, String value) {
				LOG.info("Click on " + object);
				
				onClick«tableWidget.name.toFirstUpper()»«this.name.toFirstUpper()»Col(object, value);
			}
			
		});
		return col;
    }
    
    protected abstract void onClick«tableWidget.name.toFirstUpper()»«this.name.toFirstUpper()»Col(«tableWidget.for.fqnGwtDto()» object, String value);

«ENDDEFINE»

«DEFINE widgetMethods FOR ButtonWidget»
	public com.google.gwt.event.dom.client.HasClickHandlers get«name.toFirstUpper()»HasClickHandlers() {
		return «name»;
	}
«ENDDEFINE»

«DEFINE widgetMethods FOR InputTextWidget»
	public com.google.gwt.user.client.ui.HasText get«name.toFirstUpper()»HasText() {
		return «name»;
	}
«ENDDEFINE»

«DEFINE widgetMethods FOR InputDateWidget»
	public com.google.gwt.user.client.ui.HasText get«name.toFirstUpper()»HasText() {
		return «name»;
	}
«ENDDEFINE»

«DEFINE widgetMethods FOR LinkWidget»
	public com.google.gwt.event.dom.client.HasClickHandlers get«name.toFirstUpper()»HasClickHandlers() {
		return «name»;
	}
«ENDDEFINE»


«DEFINE widgetMethods FOR Widget»
«ENDDEFINE»

«REM»Widget delarations«ENDREM»
«DEFINE widgetDeclaration FOR Widget»
    @com.google.gwt.uibinder.client.UiField
    «resolveGwtWidgetType()» «name»;
    
«ENDDEFINE»


«DEFINE widgetDeclaration FOR TableWidget»

    // «name» cell table
    «debugTrace("widgetDeclaration() for table: " + this.name + " forModule = " + this.for.guiModule.for)»
    @com.google.gwt.uibinder.client.UiField(provided = true)
    com.google.gwt.user.cellview.client.CellTable<«fqnTableForClass()»> «name» = new com.google.gwt.user.cellview.client.CellTable<«fqnTableForClass()»>();
    final com.google.gwt.view.client.SingleSelectionModel<«fqnTableForClass()»> «name»SelectionModel =
        new com.google.gwt.view.client.SingleSelectionModel<«fqnTableForClass()»>();

«ENDDEFINE»



«REM»View impl class«ENDREM»
«DEFINE viewImpl FOR View»
«FILE javaFileName(fqnGwtViewWidgetImplClass(this)) TO_SRC»
«EXPAND viewImplBody FOR this»
«ENDFILE»
«ENDDEFINE»

«REM»View impl class - for unit tests«ENDREM»
«DEFINE viewImplForUnitTest FOR View»
«FILE javaFileName(fqnGwtViewWidgetImplClass(this))»
«EXPAND viewImplBody FOR this»
«ENDFILE»
«ENDDEFINE»

«DEFINE viewImplBody FOR View»
package «gwtWidgetsPackage()»;

public class «gwtViewWidgetImplClass()» extends  «fqnGwtViewWidgetBaseClass()» implements «fqnGwtViewInterface()» {

	«loggerDeclaration(gwtViewWidgetImplClass())»

	public «gwtViewWidgetImplClass()»() {
		super();
	}
	
	// Uncomment the following if you need to override the template
	/*
    interface «gwtViewWidgetImplClass()»UiBinder extends com.google.gwt.uibinder.client.UiBinder<com.google.gwt.user.client.ui.Widget, «fqnGwtViewWidgetImplClass()»> {}

    private static «gwtViewWidgetImplClass()»UiBinder uiBinder = com.google.gwt.core.client.GWT
    	.create(«gwtViewWidgetImplClass()»UiBinder.class);

    protected com.google.gwt.user.client.ui.Widget getWidget() {
    	return uiBinder.createAndBindUi(this);
    }

	*/
}
«ENDDEFINE»
