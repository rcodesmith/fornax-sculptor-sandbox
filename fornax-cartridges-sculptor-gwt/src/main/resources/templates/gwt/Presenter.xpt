«IMPORT sculptormetamodel»
«IMPORT sculptorguimetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::properties»
«EXTENSION extensions::guihelper»
«EXTENSION extensions::gwt::gwtuihelpers»
«EXTENSION extensions::gwt::sofeauihelpers»

«DEFINE presenterBaseInterfaceBody FOR View»
«javaHeader()»
package «gwtActivitiesBasePackage()»;

/**
  * Presenter base interface for view «name».
  */
public interface «gwtPresenterBaseInterface()» extends «gwtFrameworkPresenterBaseInterface()» {

	«EXPAND presenterInterfaceDeclarations(this) FOREACH this.allWidgets()»
}
«ENDDEFINE»

«DEFINE presenterBaseInterface FOR View»
	«FILE javaFileName(fqnPresenterBaseInterface()) TO_SRC»
		«EXPAND presenterBaseInterfaceBody FOR this»
	«ENDFILE»
«ENDDEFINE»

«DEFINE presenterBaseInterfaceForUnitTest FOR View»
	«FILE javaFileName(fqnPresenterBaseInterface())»
		«EXPAND presenterBaseInterfaceBody FOR this»
	«ENDFILE»
«ENDDEFINE»



«REM»----------------------------------------------------------------------------------------
	Behavior binding methods
-------------------------------------------------------------------------------------«ENDREM»

«DEFINE behaviorBindingMethods(Widget widget) FOR BehaviorBinding»
	// Presenter interface for «widget.name» widget and «this.bindingTypeName» type binding not yet implemented
	
«ENDDEFINE»

«DEFINE behaviorBindingMethods(Widget widget) FOR OnClickBinding»
	/**
	  * «widget.name» widget has received a click
	  */
	void «widget.name»OnClick(com.google.gwt.event.dom.client.ClickEvent clickEvent);
«ENDDEFINE»




«REM»----------------------------------------------------------------------------------------
	Widget presenter interface declarations
-------------------------------------------------------------------------------------«ENDREM»

«REM»Declarations that must be added to the presenter interface for each widget«ENDREM»
«DEFINE presenterInterfaceDeclarations(View view) FOR Widget»
	
	«IF view.usePresenterCallbacks()»
		«EXPAND behaviorBindingMethods(this) FOREACH this.behaviorBindings»	
	«ENDIF»

«ENDDEFINE»

«DEFINE presenterInterfaceDeclarations(View view) FOR TableWidget»
	«IF view.usePresenterCallbacks()»
		«EXPAND behaviorBindingMethods(this) FOREACH this.behaviorBindings»	
	«ENDIF»

    «FOREACH columns AS col»
	    «IF col.columnType == "Text"»
		«ELSEIF col.columnType == "Button"»
		    «EXPAND tableColumnOnClickHandlers(this) FOR col »
		«ELSEIF col.columnType == "Date"»
		«ELSEIF col.columnType == "Custom"»
		«ELSEIF col.columnType == "Link"»
		    «EXPAND tableColumnOnClickHandlers(this) FOR col »			
	    «ENDIF»
    «ENDFOREACH»
    
	«IF usesAsyncDataProvider()»
		/**
		 * Indication that the range of elements to be displayed for the «name» table has changed, and the
		 * table should be updated.
		 * This method should be overridden by subclasses.
		 * @param hasData HasData interface of the table
		 */
		public void «name»RangeChanged(com.google.gwt.view.client.HasData<«fqnTableForClass()»> hasData);
	«ENDIF»



«ENDDEFINE»

«DEFINE tableColumnOnClickHandlers(TableWidget tableWidget) FOR TableColumn»

«ENDDEFINE»






«DEFINE presenterInterface FOR View»
«FILE javaFileName(fqnPresenterInterface()) TO_SRC»
«javaHeader()»
package «gwtActivitiesPackage()»;

/**
  * Presenter interface for view «name».
  */
public interface «gwtPresenterInterface()» extends «fqnPresenterBaseInterface()» {
}

«ENDFILE»
«ENDDEFINE»
