<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd"> 

	<http realm='smartclient'>
		<intercept-url pattern='/smartclient/images/**' filters='none'/>
		<intercept-url pattern='/smartclient/login.html' filters='none'/>
		<intercept-url pattern="/**" access="ROLE_USER" /> <!-- requires-channel="https" -->

		<form-login login-page='/smartclient/login.html'
			authentication-failure-url="/smartclient/login.html?accessDenied"
			login-processing-url="/smartclient/j_security_check"
			default-target-url='/smartclient/Main.html'
			always-use-default-target='true' />
		<logout logout-url="/logout" logout-success-url="/smartclient/login.html"/>
	</http>

	<beans:bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
	</beans:bean>

	<!-- Service based authentication provider - SHA256 encoded and username salt --> 
<!-- 
	<beans:bean id="smartclientUserDetailsService" class="org.fornax.cartridges.sculptor.smartclient.server.util.SculptorUserDetailProvider"/>

	<authentication-provider user-service-ref="smartclientUserDetailsService">
		<password-encoder ref="passwordEncoder">
			<salt-source user-property="username" />
		</password-encoder>
	</authentication-provider>
 -->

	<!-- Hardcoded authentication provider - DEMO ONLY --> 
	<authentication-provider>
		<user-service>
			<user name="user" password="user" authorities="ROLE_USER"/>
			<user name="admin" password="admin" authorities="ROLE_USER,ROLE_ADMIN"/>
		</user-service>
	</authentication-provider>

	<global-method-security>

		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..ServiceRegistryService.getServices(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..ListSettingsService.save(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..ListSettingsService.delete(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..GuiDataSourceService.save(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..GuiDataSourceService.setServiceMapping(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..ClientCommandService.sendCommand(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..ClientCommandService.sendCommands(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..PropertyService.save(..))" access="ROLE_USER"/>
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..PropertyService.delete(..))" access="ROLE_ADMIN"/>

<!-- 
		<protect-pointcut expression="execution(* org.fornax.cartridges.sculptor.smartclient..*Service.find*(..))" access="ROLE_ADMIN,ROLE_COMPLIANCE_MANAGER,ROLE_OPERATOR,ROLE_ADVISOR,ROLE_CLIENT,ROLE_AUDITOR"/>
 -->
		
	</global-method-security>

</beans:beans>
