ApplicationPart PersonPart {
 
    Module person {
        Service PersonService {
          findPersonByName => PersonRepository.findPersonByName;
          findByCondition => PersonRepository.findByCondition;
        }
     
        Entity Person {
          gap
          scaffold
          Date birthDate past
          - @Gender sex !changeable
          - @Ssn ssn key
          - @PersonName name
          - @Contact contact nullable

          Repository PersonRepository {
              List<@Person> findPersonByName(String name);
              save;
              save(Collection<@Person> entities);
              findByQuery;
              findByQuery(PagingParameter pagingParameter);
              findByExample;
              findByKeys;
              findByKey hint="cache";
              findByCriteria(PagingParameter pagingParameter);
              findByCondition;
              findAll(PagingParameter pagingParameter) hint="orderBy=name.last";
          }
        }

		Entity Contact {
			- @PersonName personName nullable;
			String adress nullable;
			String city nullable;
			String zip nullable;
			String state nullable;
		}

        BasicType Ssn {
          String number key length="20"
          - @Country country key
        }
    
        BasicType PersonName {
          String first
          String last
        }
        
        enum Gender {
            FEMALE("F"), 
            MALE("M")
        }
        
        enum Country {
            String alpha2 key 
            String alpha3
            int numeric
            SWEDEN("SE", "SWE", "752"),
            NORWAY("NO", "NOR", "578"),
            DENMARK("DK", "DNK", "208"),
            US("US", "USA", "840")
        }
        
    }
  
   
}


