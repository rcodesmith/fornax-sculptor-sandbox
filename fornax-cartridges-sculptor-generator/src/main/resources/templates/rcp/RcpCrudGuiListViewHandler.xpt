«REM»
 * Copyright 2008 The Fornax Project Team, including the original 
 * author or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
«ENDREM»

«IMPORT sculptormetamodel»
«IMPORT sculptorguimetamodel»

«EXTENSION extensions::helper»
«EXTENSION extensions::guihelper»
«EXTENSION extensions::properties»

«DEFINE listViewHandler FOR GuiApplication»
	«EXPAND listViewHandler FOREACH modules»
«ENDDEFINE» 

«DEFINE listViewHandler FOR GuiModule»
	«EXPAND listViewHandler FOREACH userTasks.typeSelect(ListTask)»
«ENDDEFINE»

«DEFINE listViewHandler FOR ListTask»
	«FILE javaFileName(module.getRichClientPackage() + ".handler.ShowList" + for.name + "ViewHandler") -»
«javaHeader()»
package «module.getRichClientPackage()».handler;

/**
 * Handler for opening the List«for.name»View
 * 
 */
public class ShowList«for.name»ViewHandler extends org.eclipse.core.commands.AbstractHandler {
    
	«EXPAND listViewHandlerConstructor»
	«EXPAND listViewHandlerEnabled»
	«EXPAND listViewHandlerExecute»
}
	«ENDFILE»
«ENDDEFINE»

«DEFINE listViewHandlerConstructor FOR ListTask»
    public ShowList«for.name»ViewHandler() {
    }
«ENDDEFINE»

«DEFINE listViewHandlerEnabled FOR ListTask»
    private boolean enabled = true;

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }
«ENDDEFINE»

«DEFINE listViewHandlerExecute FOR ListTask»
    public Object execute(org.eclipse.core.commands.ExecutionEvent event) throws org.eclipse.core.commands.ExecutionException {
        try {
            org.eclipse.ui.IWorkbenchWindow window = org.eclipse.ui.handlers.HandlerUtil.getActiveWorkbenchWindow(event);
            window.getActivePage().showView(«module.getRichClientPackage()».ui.List«for.name»View.ID);
            return null;
        } catch (org.eclipse.ui.PartInitException e) {
            throw new RuntimeException(e);
        }
    }
«ENDDEFINE»

