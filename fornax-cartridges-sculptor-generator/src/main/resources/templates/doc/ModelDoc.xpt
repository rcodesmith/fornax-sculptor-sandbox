«REM»
Generates summary documentation of the domain model.
«ENDREM»

«IMPORT sculptormetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::dbhelper»
«EXTENSION extensions::properties»
«EXTENSION extensions::umlgraphhelper»

«DEFINE start FOR Application»
	«EXPAND docHtml FOR this»
	«EXPAND ModelDocCss::docCss FOR this»
	«EXPAND moduleDocHtml FOREACH modules»
«ENDDEFINE»

«DEFINE docHtml FOR Application»
«FILE "DomainModelDoc.html" TO_GEN_RESOURCES»
«LET "Summary Documation of " + name + " Domain Model" AS title-»
«EXPAND header(title)»

	<div id="wrap">
  
	<h1>«title»</h1>

	«EXPAND menu»
	«IF isUMLToBeGenerated()»
		«EXPAND graph»
	«ENDIF»
	«EXPAND footer»

	</div>
</body>
</html>
«ENDLET»			
«ENDFILE»    
«ENDDEFINE»

«DEFINE moduleDocHtml FOR Module»
«FILE "DomainModelDoc-" + name + ".html" TO_GEN_RESOURCES»
«LET "Summary Documation of " + name + " module" AS title-»
«EXPAND header(title + "(" + application.name + ")")»
	<div id="wrap">
  	<a name="module_«name»"></a>
	<h1>«title» <a href="DomainModelDoc.html">(«application.name»)</a></h1>
	
	
	«EXPAND moduleDocContent»

	</div>
</body>
</html>	
«ENDLET»
«ENDFILE»
«ENDDEFINE»

«DEFINE header(String title) FOR Object»
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
	<style type="text/css" media="screen,print">   
    	@import url("DomainModelDoc.css");
  	</style> 
	<title>«title»</title> 
</head>
<body>
«ENDDEFINE»

«DEFINE footer FOR Application»
	<div id="footer">
	<br/>
	<br/>
	</div>
«ENDDEFINE»

«DEFINE main FOR Application»
	<div id="main">
	«EXPAND moduleDoc FOREACH modules.sortBy(e|e.name)»
	</div>
«ENDDEFINE»


«DEFINE moduleDoc FOR Module»
	<a name="module_«name»"></a>
	<h2>Module «name»</h2>
	
	«EXPAND moduleDocContent»
	<hr/>
«ENDDEFINE»

«DEFINE moduleDocContent FOR Module»
	<p>«doc»</p>
	«EXPAND menu»
	«IF isUMLToBeGenerated()»
		«EXPAND graph»
	«ENDIF»
	
	<div id="services">
	<hr/>
	«EXPAND serviceDoc FOREACH services.sortBy(e|e.name)»
	</div>
	<div id="consumers">
	«EXPAND consumerDoc FOREACH consumers.sortBy(e|e.name)»
	</div>
	<div id="domainObjects">
	«EXPAND domainObjectDoc FOREACH domainObjects.sortBy(e|e.name)»
	</div>
«ENDDEFINE»

«DEFINE menu FOR Application»
	<div id="menu">
	«FOREACH modules.sortBy(e|e.name) AS m»
		<h2><a href="DomainModelDoc-«m.name».html#module_«m.name»">«m.name»</a></h2>
			«EXPAND menuItems FOR m»
	«ENDFOREACH»
	</div>
«ENDDEFINE»

«DEFINE menu FOR Module»
	<div id="menu">
			«EXPAND menuItems»
	</div>
«ENDDEFINE»

«DEFINE menuItems FOR Module»
			<ul>
			«EXPAND menuItem FOREACH 
				{}.addAll(services)
				.addAll(consumers)
				.addAll(domainObjects)
				.sortBy(e | ((NamedElement) e).name)»
			</ul>
«ENDDEFINE»

«DEFINE menuItem FOR Object»
«ENDDEFINE»

«DEFINE menuItem FOR NamedElement»
				<li><a href="DomainModelDoc-«getModule().name».html#«name»">«name»</a></li>
«ENDDEFINE»				

«DEFINE graph FOR Application»
	<div id="graph">
		<hr/>
		<p><b>Modules</b></p>
		<a href="umlgraph-dependencies.dot.png">
		<img src="umlgraph-dependencies.dot.png" />
		</a>
		<hr/>
		<p><b>Overview</b></p>
		<a href="umlgraph-overview.dot.png">
		<img src="umlgraph-overview.dot.png" />
		</a>
	«IF existsCoreDomain()»
		<hr/>
		<p><b>Core Domain</b></p>
		<a href="umlgraph-core-domain.dot.png">
		<img src="umlgraph-core-domain.dot.png" />
		</a>
	«ENDIF»
		<hr/>
		<p><b>All</b></p>
		<a href="umlgraph.dot.png">
		<img src="umlgraph.dot.png" />
		</a>
		<hr/>
	</div>
«ENDDEFINE»

«DEFINE graph FOR Module»
	<div id="module_graph">
		<a href="umlgraph-«name».dot.png">
		<img src="umlgraph-«name».dot.png" />
		</a>
	</div>
«ENDDEFINE»

«DEFINE serviceDoc FOR Service»
	<a name="«name»"></a>
	<h3>«name»</h3>
	<p>«doc»</p>
	«EXPAND operationDoc FOREACH operations.sortBy(e| ((NamedElement) e).name)»
	<hr/>
«ENDDEFINE»

«DEFINE operationDoc FOR Operation»
	<div id="operation">
	<b>«name»</b>
	<p>«doc»</p>
	«IF parameters.size > 0»
		<div id="operation_parameters">
		<p>Parameters:</p>
		<ul>
		«EXPAND operationParameterDoc FOREACH parameters»
		</ul>
		</div>
	«ENDIF»
	«IF type != null || domainObjectType != null»
		<div id="operation_returns">
		<p>Returns:</p>
		<ul><li>«EXPAND operationTypeDoc» </li></ul>
		</div>
	«ENDIF»
	</div>
«ENDDEFINE»

«DEFINE operationParameterDoc FOR Parameter»
	<li>«EXPAND operationTypeDoc» «name»«IF doc != null»<br/>«doc»«ENDIF»</li>
«ENDDEFINE»

«DEFINE operationTypeDoc FOR DomainObjectTypedElement»
	«IF domainObjectType != null»
		«IF collectionType != null»«collectionType»&lt;«ENDIF»<a href="DomainModelDoc-«domainObjectType.module.name».html#«domainObjectType.name»">«domainObjectType.name»</a>«IF collectionType != null»&gt;«ENDIF»
	«ELSEIF type != null»
		«IF collectionType != null»«collectionType»&lt;«ENDIF»«type»«IF collectionType != null»&gt;«ENDIF»
	«ENDIF»
«ENDDEFINE»

«DEFINE consumerDoc FOR Consumer»
	<a name="«name»"></a>
	<h3>«name»</h3>
	<p>«doc»</p>
	<hr/>
«ENDDEFINE»

«DEFINE domainObjectDoc FOR DomainObject»
	<a name="«name»"></a>
	<h3>«name»</h3>
	«EXPAND domainObjectCharacteristics»
	<p>«doc»</p>
	<table>
		<thead>
			<th>Name</th>
			<th>Type</th>
			<th>Length</th>
			<th>Mandatory</th>
			<th>Changeable</th>
			<th>Description</th>
		</thead>

	«EXPAND fieldDoc FOREACH 
		{}.addAll(references.reject(r | r.transient)).addAll(attributes.reject(a | a.transient)).
			sortBy(e| ((NamedElement) e).name)»

	</table>
	«IF !operations.isEmpty»
		<p><i>Operations:</i></p>
		«EXPAND operationDoc FOREACH operations.sortBy(e| ((NamedElement) e).name)»
	«ENDIF»
	<hr/>
«ENDDEFINE»

«DEFINE domainObjectDoc FOR Enum»
	<a name="«name»"></a>
	<h3>«name»</h3>
	«EXPAND domainObjectCharacteristics»
	<p>«doc»</p>
	<table>
		<thead>
			<th>Name</th>
			<th>Description</th>
		</thead>

	«FOREACH values AS val»
		<tr>
			<td>«val.name»</td>
			<td>«val.doc»</td>
		</tr>
	«ENDFOREACH»
	</table>
	<hr/>
«ENDDEFINE»

«DEFINE extendsCharacteristics FOR DomainObject»
«IF extends != null»<p><i>extends <a href="DomainModelDoc-«extends.getModule().name».html#«extends.name»">«extends.name»</a></i></p>«ENDIF»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR DomainObject»
	<p>«IF isImmutable()»<i>Immutable</i>«ENDIF»</p>
	«EXPAND extendsCharacteristics»
	«EXPAND traitsCharacteristics»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR Entity»
	<p><i>Entity</i>«IF !isAggregateRoot()», «EXPAND notAggregateRootInfo»«ENDIF»</p>
	«IF isImmutable()»<p><i>Immutable</i></p>«ENDIF»
	«EXPAND extendsCharacteristics»
	«EXPAND traitsCharacteristics»
«ENDDEFINE»

«DEFINE notAggregateRootInfo FOR DomainObject»
	«LET getAggregateRootObject() AS aggregateRootObject -»
	not aggregate root, belongs to 
		<a href="DomainModelDoc-«aggregateRootObject.getModule().name».html#«aggregateRootObject.name»">«aggregateRootObject.name»</a>
	«ENDLET -»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR ValueObject»
	<p><i>«IF isImmutable()»Immutable «ENDIF» ValueObject</i>«IF !persistent», not persistent«ELSEIF !isAggregateRoot()», «EXPAND notAggregateRootInfo»«ENDIF»</p>
	«EXPAND extendsCharacteristics»
	«EXPAND traitsCharacteristics»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR BasicType»
	<p><i>«IF isImmutable()»Immutable «ENDIF» BasicType</i></p>
	«EXPAND traitsCharacteristics»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR Enum»
	<p><i>Enum</i></p>
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR DataTransferObject»
	<p><i>«IF isImmutable()»Immutable «ENDIF» DTO</i></p>
	«EXPAND extendsCharacteristics»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR DomainEvent»
	<p><i>«IF isImmutable()»Immutable «ENDIF» DomainEvent</i></p>
	«EXPAND extendsCharacteristics»
	«EXPAND traitsCharacteristics»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR CommandEvent»
	<p><i>«IF isImmutable()»Immutable «ENDIF» CommandEvent</i></p>
	«EXPAND extendsCharacteristics»
	«EXPAND traitsCharacteristics»
«ENDDEFINE»

«DEFINE domainObjectCharacteristics FOR Trait»
	<p><i>Trait</i></p>
«ENDDEFINE»

«DEFINE traitsCharacteristics FOR DomainObject»
«IF !traits.isEmpty»<p><i>«FOREACH traits AS t» with <a href="DomainModelDoc-«t.getModule().name».html#«t.name»">«t.name»</a>«ENDFOREACH»</i></p>«ENDIF»
«ENDDEFINE»

«DEFINE fieldDoc FOR Object»
«ENDDEFINE»

«DEFINE fieldDoc FOR Attribute»
	«LET getDomainObject().metaType == DataTransferObject AS isDto»
	<tr>
		<td>«IF naturalKey»<b>«ENDIF»«name»«IF naturalKey»</b>«ENDIF»</td>
		<td>«IF collectionType != null»«collectionType»&lt;«ENDIF»«type»«IF collectionType != null»&gt;«ENDIF»</td>
		<td>«IF isDto || collectionType != null || getDatabaseLength() == null»&nbsp;«ELSE»«getDatabaseLength()»«ENDIF»</td>
		<td>«IF (isDto && !required) || (!isDto && nullable)»&nbsp;«ELSE»X«ENDIF»</td>
		<td>«IF changeable»X«ELSE»&nbsp;«ENDIF»</td>
		<td>«EXPAND description»</td>
	</tr>
	«ENDLET»		
«ENDDEFINE»

«DEFINE description FOR Attribute»
	«IF name == "id" && doc == null -»
		Generated unique id (GID pk)
	«ELSEIF name == "createdBy" && doc == null -»
		Information about who created the object
	«ELSEIF name == "lastUpdatedBy" && doc == null -»
		Information about who last updated the object
	«ELSEIF name == "createdDate" && doc == null -»
		Creation timestamp of the object
	«ELSEIF name == "lastUpdated" && doc == null -»
		Last updated timestamp of the object
	«ELSEIF name == "version" && doc == null -»
		Update counter used for optimistic locking
	«ELSEIF name == "uuid" && doc == null -»
		Unique id needed for equals and hashCode, since there is no natural key
	«ELSE -»
		«doc»
	«ENDIF -»
«ENDDEFINE»

«DEFINE fieldDoc FOR Reference»
	«LET from.metaType == DataTransferObject AS isDto»
	<tr>
		<td>«IF naturalKey»<b>«ENDIF»«name»«IF naturalKey»</b>«ENDIF»</td>
		<td>«IF collectionType != null»«collectionType»&lt;«ENDIF»<a href="DomainModelDoc-«to.module.name».html#«to.name»">«to.name»</a>«IF collectionType != null»&gt;«ENDIF»</td>
		<td>&nbsp;</td>
		<td>«IF (isDto && !required) || (!isDto && nullable)»&nbsp;«ELSE»X«ENDIF»</td>
		<td>«IF changeable»X«ELSE»&nbsp;«ENDIF»</td>
		<td>«doc»</td>
	</tr>
	«ENDLET»		
«ENDDEFINE»

