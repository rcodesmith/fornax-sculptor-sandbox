«REM»
 * Copyright 2008 The Fornax Project Team, including the original
 * author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
«ENDREM»

«IMPORT sculptormetamodel»
«IMPORT sculptorguimetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::properties»
«EXTENSION extensions::guihelper»

«DEFINE springApplicationContextXml FOR GuiApplication»
«FILE "WEB-INF/generated/config/applicationContext.xml" TO_GEN_WEBROOT-»
«EXPAND springApplicationContextXmlContent»
«ENDFILE»
«ENDDEFINE»

«DEFINE springApplicationContextXmlContent FOR GuiApplication»
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop 
		   http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context-2.5.xsd">
«IF isEar() -»
«FOREACH getAllUsedServices() AS service-»
    «REM»  TODO can't we use Spring lookup instead of our Proxy for EJB3
    <jee:local-slsb id="«service.name.toFirstLower()»Proxy"
                     jndi-name="ejb/«service.name»Local"
                     lookup-home-on-startup="true"
                     business-interface="«service.getServiceapiPackage()».«service.name»"/>
    «ENDREM»
    <bean id="«service.name.toFirstLower()»Proxy" class="«service.getServiceproxyPackage()».«service.name»Proxy" />
«ENDFOREACH»
«ENDIF -»
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" >
        <property name="defaultErrorView" value="error"/>
    </bean>
«IF jpa()»
	    <bean id="repository" class="«conversationDomainObjectJpaRepositoryImplClass()»" >
	    	<property name="entityManagerFactory" ref="entityManagerFactory" />
	    </bean>
«ELSEIF mongoDb()»
	<bean id="repository" class="«basePackage».util.«subPackage("web")».ConversationDomainObjectMongoDbRepositoryImpl" >
		<property name="dbManager" ref="mongodbManager" />
	</bean>
«ENDIF»

«IF isDynamicMenu()»
	<bean id="dynamicMenu" class="«this.basePackage».«this.name.toFirstUpper()»DynamicMenu">
		<property name="messages" ref="messageSource"/>
	 </bean>
«ENDIF»

    <bean id="webExceptionAdvice" class="«webExceptionAdviceClass()»" />
    «EXPAND actionAopConfig»
	<import resource="webmvc-config.xml" />
	<import resource="webflow-config.xml" />
	«EXPAND componentScan »
</beans>
«ENDDEFINE »

«DEFINE componentScan FOR GuiApplication»
	<!-- scans for @Components, @Repositories, @Services, ... -->
	«FOREACH modules AS module»
	<context:component-scan base-package="«module.getWebPackage()»"/>
	«ENDFOREACH»
		
«ENDDEFINE»

«DEFINE actionAopConfig FOR GuiApplication »
		<aop:config>
			<aop:pointcut id="webAction" expression="execution(public String *(org.springframework.webflow.execution.RequestContext))"/>
    		<aop:advisor pointcut-ref="webAction" advice-ref="webExceptionAdvice" />
  		</aop:config>
«ENDDEFINE»