«REM»
 * Copyright 2007 The Fornax Project Team, including the original
 * author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
«ENDREM»

«IMPORT sculptormetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::properties»

«DEFINE Root FOR Application»
  «IF !modules.isEmpty»
    «IF isDomainObjectToBeGenerated()»
	    «EXPAND templates::domain::DomainObject::domainObject FOREACH getAllDomainObjects(false)»
	«ENDIF»
	«IF isExceptionToBeGenerated()»
	    «EXPAND templates::common::Exception::applicationExceptions FOREACH modules.reject(e|e.external)»
	«ENDIF»
    «IF isRepositoryToBeGenerated()»
	    «EXPAND templates::repository::AccessObject::command FOREACH
	        getAllRepositories(false).operations.select(op | op.delegateToAccessObject && !op.isGenericAccessObject())»
	    «EXPAND templates::repository::Repository::repository FOREACH getAllRepositories(false)»
	    «IF mongoDb()»
	    	«EXPAND templates::mongodb::MongoDbMapper::mongoDbMapper FOREACH getAllDomainObjects(false).select(e | e.isPersistent() || e.metaType == BasicType)»
	    «ENDIF»
	«ENDIF»
	«IF isServiceToBeGenerated()»
	    «EXPAND templates::service::Service::service FOREACH getAllServices(false)»
	«ENDIF»
	«IF isResourceToBeGenerated()»
	    «EXPAND templates::rest::Resource::resource FOREACH getAllResources(false)»
	«ENDIF»
	«IF isRestWebToBeGenerated() && !getAllResources(false).isEmpty»
		«EXPAND templates::rest::RestWeb::restWeb»
	«ENDIF»
	«IF isConsumerToBeGenerated()»
	    «EXPAND templates::consumer::Consumer::consumer FOREACH getAllConsumers(false)»
	«ENDIF»
	«IF isEmptyDbUnitTestDataToBeGenerated()»
		«EXPAND templates::db::DbUnit::emptyDbunitTestData»
	«ENDIF»
	«IF getDbUnitDataSetFile() != null»
		«EXPAND templates::db::DbUnit::singleDbunitTestData»
	«ENDIF»
	«IF pureEjb3() && isTestToBeGenerated() && !jpa()»
		«EXPAND templates::service::ServiceEjbTest::ejbJarXml»
	«ENDIF»
	«IF isSpringToBeGenerated()»
	    «EXPAND templates::spring::Spring::spring»
	«ENDIF»
	«IF isDdlToBeGenerated()»
	    «EXPAND templates::db::DDL::ddl»
	«ENDIF»
	«IF isDatasourceToBeGenerated()»
	    «EXPAND templates::db::Datasource::datasource»
	«ENDIF»
	«IF isLogbackConfigToBeGenerated()»
	    «EXPAND templates::common::LogConfig::logbackConfig»
	«ENDIF»
	«IF isHibernateToBeGenerated()»
	    «EXPAND templates::jpa::Hibernate::hibernate»
	«ENDIF»
	«IF isJpaAnnotationToBeGenerated()»
	    «EXPAND templates::jpa::JPA::jpa»
	«ENDIF»
	«IF isUMLToBeGenerated()»
		«EXPAND templates::doc::UMLGraph::start»
	«ENDIF»
	«IF isModelDocToBeGenerated()»
		«EXPAND templates::doc::ModelDoc::start»
	«ENDIF»
  «ENDIF»

«ENDDEFINE»


