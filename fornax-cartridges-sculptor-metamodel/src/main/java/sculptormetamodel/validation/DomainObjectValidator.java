/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package sculptormetamodel.validation;

import org.eclipse.emf.common.util.EList;

import sculptormetamodel.DomainObject;
import sculptormetamodel.Inheritance;
import sculptormetamodel.Module;
import sculptormetamodel.Repository;

/**
 * A sample validator interface for {@link sculptormetamodel.DomainObject}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DomainObjectValidator {
	boolean validate();

	boolean validateReferences(EList value);
	boolean validateExtends(DomainObject value);
	boolean validateAttributes(EList value);
	boolean validateAbstract(boolean value);
	boolean validateRepository(Repository value);
	boolean validateModule(Module value);
	boolean validateOptimisticLocking(boolean value);
	boolean validateCache(boolean value);
	boolean validatePackage(String value);
	boolean validateDatabaseTable(String value);
	boolean validateExtendsName(String value);
	boolean validateValidate(String value);
	boolean validateGapClass(boolean value);
	boolean validateInheritance(Inheritance value);
	boolean validateDiscriminatorColumnValue(String value);
	boolean validateAggregateRoot(boolean value);
	boolean validateBelongsToAggregate(DomainObject value);
	boolean validateOperations(EList value);
	boolean validateTraits(EList value);
}
