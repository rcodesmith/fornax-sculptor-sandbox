/*
 * generated by Xtext
 */
package org.fornax.cartridges.sculptor.gui.dsl.formatting;

import java.util.List;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class SculptorguidslFormatter extends AbstractDeclarativeFormatter {

    @Override
    protected void configureFormatting(FormattingConfig c) {
        org.fornax.cartridges.sculptor.gui.dsl.services.SculptorguidslGrammarAccess f = (org.fornax.cartridges.sculptor.gui.dsl.services.SculptorguidslGrammarAccess) getGrammarAccess();

        c.setAutoLinewrap(120);

        c.setLinewrap().around(f.getDslGuiViewPropertyRule());

        c.setLinewrap().around(f.getDslImportRule());

        c.setLinewrap().around(f.getDslCreateWithRule());
        c.setLinewrap().around(f.getDslFindWithRule());
        c.setLinewrap().around(f.getDslUpdateWithRule());
        c.setLinewrap().around(f.getDslSearchWithRule());
        c.setLinewrap().around(f.getDslPopulateWithRule());
        // c.setLinewrap().before(f.getDslFindWithAccess().getFindWithKeyword_0());
        // c.setLinewrap().before(f.getDslUpdateWithAccess().getUpdateWithKeyword_0());
        // c.setLinewrap().before(f.getDslDeleteWithAccess().getDeleteWithKeyword_0());
        // c.setLinewrap().before(f.getDslSearchWithAccess().getSearchWithKeyword_0());
        // c.setLinewrap().before(f.getDslPopulateWithAccess().getPopulateWithKeyword_0());

        c.setLinewrap(1, 2, 3).around(f.getDslGuiApplicationRule());
        c.setLinewrap(1, 2, 3).around(f.getDslGuiModuleRule());
        c.setLinewrap(1, 2, 3).around(f.getDslCreateTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslUpdateTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslDeleteTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslListTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslViewTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslAddTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslSkipCreateTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslSkipUpdateTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslSkipDeleteTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslSkipListTaskRule());
        c.setLinewrap(1, 2, 3).around(f.getDslSkipAddTaskRule());

        c.setIndentation(f.getDslGuiApplicationAccess().getGuiKeyword_2(), f.getDslGuiApplicationAccess()
                .getRightCurlyBracketKeyword_9());
        List<Pair<Keyword, Keyword>> pairs = f.findKeywordPairs("{", "}");
        for (Pair<Keyword, Keyword> pair : pairs) {
            c.setIndentation(pair.getFirst(), pair.getSecond());
            c.setLinewrap().after(pair.getFirst());
            c.setLinewrap(1, 2, 2).around(pair.getSecond());
        }

        for (Keyword each : f.findKeywords(".")) {
            c.setNoSpace().around(each);
        }
        for (Keyword each : f.findKeywords("=")) {
            c.setNoSpace().around(each);
        }

        c.setNoSpace().before(f.getDslGuiPreviewPropertyAccess().getCommaKeyword_2());
        c.setNoSpace().around(f.getDslGuiPreviewPropertyAccess().getFullStopKeyword_1_0());
        c.setNoSpace().around(f.getDslCreateWithAccess().getFullStopKeyword_2());
        c.setNoSpace().around(f.getDslFindWithAccess().getFullStopKeyword_2());
        c.setNoSpace().around(f.getDslUpdateWithAccess().getFullStopKeyword_2());
        c.setNoSpace().around(f.getDslDeleteWithAccess().getFullStopKeyword_2());
        c.setNoSpace().around(f.getDslSearchWithAccess().getFullStopKeyword_2());
        c.setNoSpace().around(f.getDslPopulateWithAccess().getFullStopKeyword_2());

        // comments
        c.setNoLinewrap().before(f.getSL_COMMENTRule());
        c.setNoLinewrap().before(f.getSTRINGRule());
    }
}
